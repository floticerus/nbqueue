0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . C:\Users\monolithOG\AppData\Roaming\npm-cache\3a52ce78-.lock
10 verbose tar pack [ 'C:\\Users\\MONOLI~1\\AppData\\Local\\Temp\\npm-10456-QIXCOGX8\\1402316570691-0.5888081106822938\\tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
12 verbose folder .
13 info prepublish nbqueue@0.0.2
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. C:\Users\monolithOG\AppData\Roaming\npm-cache\1f1177db-tar.lock
16 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
17 verbose lock tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz C:\Users\monolithOG\AppData\Roaming\npm-cache\969864e5-70691-0-5888081106822938-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
21 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
22 verbose tar unpack C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
23 silly lockFile 0a1e3d56--npm-cache-nbqueue-0-0-2-package tar://C:\Users\monolithOG\AppData\Roaming\npm-cache\nbqueue\0.0.2\package
24 verbose lock tar://C:\Users\monolithOG\AppData\Roaming\npm-cache\nbqueue\0.0.2\package C:\Users\monolithOG\AppData\Roaming\npm-cache\0a1e3d56--npm-cache-nbqueue-0-0-2-package.lock
25 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
26 verbose lock tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz C:\Users\monolithOG\AppData\Roaming\npm-cache\969864e5-70691-0-5888081106822938-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
32 silly gunzTarPerm extractEntry LICENSE
33 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
34 silly gunzTarPerm extractEntry index.js
35 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
36 silly lockFile 0a1e3d56--npm-cache-nbqueue-0-0-2-package tar://C:\Users\monolithOG\AppData\Roaming\npm-cache\nbqueue\0.0.2\package
37 silly lockFile 0a1e3d56--npm-cache-nbqueue-0-0-2-package tar://C:\Users\monolithOG\AppData\Roaming\npm-cache\nbqueue\0.0.2\package
38 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
39 silly lockFile 969864e5-70691-0-5888081106822938-tmp-tgz tar://C:\Users\MONOLI~1\AppData\Local\Temp\npm-10456-QIXCOGX8\1402316570691-0.5888081106822938\tmp.tgz
40 silly lockFile 3a52ce78- .
41 silly lockFile 3a52ce78- .
42 silly publish { name: 'nbqueue',
42 silly publish   version: '0.0.2',
42 silly publish   description: 'nbqueue\r =======',
42 silly publish   main: 'index.js',
42 silly publish   repository:
42 silly publish    { type: 'git',
42 silly publish      url: 'https://github.com/kvonflotow/nbqueue.git' },
42 silly publish   keywords:
42 silly publish    [ 'queue',
42 silly publish      'functions',
42 silly publish      'node',
42 silly publish      'nodejs',
42 silly publish      'javascript',
42 silly publish      'js',
42 silly publish      'async' ],
42 silly publish   author: { name: 'kevin von flotow' },
42 silly publish   license: 'MIT',
42 silly publish   bugs: { url: 'https://github.com/kvonflotow/nbqueue/issues' },
42 silly publish   homepage: 'https://github.com/kvonflotow/nbqueue',
42 silly publish   readme: 'nbqueue\r\n=======\r\n\r\nsuper simple queue module for executing async functions in node.js. nbqueue was created as a module for [nodebee](//github.com/kvonflotow/nodebee/), a pure javascript database.\r\n\r\n## uses\r\n\r\n#### limiting the number of functions being executed\r\n\r\nwhen accessing large amounts of files asynchronously, bad things can happen. for example, take a directory with 20,000 files in it and try accessing them all at once. good luck!\r\n\r\nwith nbqueue you can set the maxProcesses to a sane amount, like 100, and it will execute a maximum of 100 functions at a time. functions added after the limit has been reached will execute as the previous functions finish up.\r\n\r\nthis is also crucial for maintaining a sane level of forked child processes.\r\n\r\n```javascript\r\nvar fs = require( \'fs\' )\r\n\r\nvar Queue = require( \'nbqueue\' )\r\n\r\nfs.readdir( directory, function ( err, files )\r\n\t{\r\n\t\t// set maxProcesses to 100\r\n\t\tvar queue = new Queue( 100 )\r\n\r\n\t\tfiles.forEach( function ( file )\r\n\t\t\t{\r\n\t\t\t\tqueue.add( function ( next )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfs.readFile( file, function ( err, data )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnext( err, data )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tqueue.done( function ( err, results )\r\n\t\t\t{\r\n\t\t\t\tif ( err )\r\n\t\t\t\t{\r\n\t\t\t\t\t// if there were errors, they will be in an array\r\n\t\t\t\t\tconsole.log( err )\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// results contains an array of the results passed to next()\r\n\t\t\t\tconsole.log( results )\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n)\r\n```\r\n\r\n#### executing async functions in order\r\n\r\nsetting maxProcesses to 1 will ensure only 1 function can be executed at a time.\r\n',
42 silly publish   readmeFilename: 'README.md',
42 silly publish   _id: 'nbqueue@0.0.2',
42 silly publish   _shasum: '10f18366cb2c2b3282a37bcb17e8cc232cbb2a84',
42 silly publish   _from: '.' }
43 verbose url raw nbqueue
44 verbose url resolving [ 'https://registry.npmjs.org/', './nbqueue' ]
45 verbose url resolved https://registry.npmjs.org/nbqueue
46 info trying registry request attempt 1 at 07:22:50
47 http PUT https://registry.npmjs.org/nbqueue
48 http 403 https://registry.npmjs.org/nbqueue
49 verbose headers { date: 'Mon, 09 Jun 2014 12:22:52 GMT',
49 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
49 verbose headers   'content-type': 'application/json',
49 verbose headers   'cache-control': 'max-age=1',
49 verbose headers   'content-length': '4820',
49 verbose headers   'accept-ranges': 'bytes',
49 verbose headers   via: '1.1 varnish',
49 verbose headers   'x-served-by': 'cache-c99-CHI',
49 verbose headers   'x-cache': 'MISS',
49 verbose headers   'x-cache-hits': '0',
49 verbose headers   'x-timer': 'S1402316572.565135,VS0,VE243',
49 verbose headers   'keep-alive': 'timeout=10, max=50',
49 verbose headers   connection: 'Keep-Alive' }
50 error publish Failed PUT 403
51 error Error: forbidden cannot modify pre-existing version: 0.0.2
51 error old={"name":"nbqueue","version":"0.0.2","description":"nbqueue\u000d =======","main":"index.js","repository":{"type":"git","url":"https://github.com/kvonflotow/nbqueue.git"},"keywords":["queue","functions","node","nodejs","javascript","js","async"],"author":{"name":"kevin von flotow"},"license":"MIT","bugs":{"url":"https://github.com/kvonflotow/nbqueue/issues"},"homepage":"https://github.com/kvonflotow/nbqueue","_id":"nbqueue@0.0.2","_shasum":"8b9b3833c2c60dfcb8f23989fa6711513a6cb1d3","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"kvonflotow","email":"vonflow@gmail.com"},"maintainers":[{"name":"kvonflotow","email":"vonflow@gmail.com"}],"dist":{"shasum":"8b9b3833c2c60dfcb8f23989fa6711513a6cb1d3","tarball":"http://registry.npmjs.org/nbqueue/-/nbqueue-0.0.2.tgz"}}
51 error new={"name":"nbqueue","version":"0.0.2","description":"nbqueue\u000d =======","main":"index.js","repository":{"type":"git","url":"https://github.com/kvonflotow/nbqueue.git"},"keywords":["queue","functions","node","nodejs","javascript","js","async"],"author":{"name":"kevin von flotow"},"license":"MIT","bugs":{"url":"https://github.com/kvonflotow/nbqueue/issues"},"homepage":"https://github.com/kvonflotow/nbqueue","readme":"nbqueue\u000d\u000a=======\u000d\u000a\u000d\u000asuper simple queue module for executing async functions in node.js. nbqueue was created as a module for [nodebee](//github.com/kvonflotow/nodebee/), a pure javascript database.\u000d\u000a\u000d\u000a## uses\u000d\u000a\u000d\u000a#### limiting the number of functions being executed\u000d\u000a\u000d\u000awhen accessing large amounts of files asynchronously, bad things can happen. for example, take a directory with 20,000 files in it and try accessing them all at once. good luck!\u000d\u000a\u000d\u000awith nbqueue you can set the maxProcesses to a sane amount, like 100, and it will execute a maximum of 100 functions at a time. functions added after the limit has been reached will execute as the previous functions finish up.\u000d\u000a\u000d\u000athis is also crucial for maintaining a sane level of forked child processes.\u000d\u000a\u000d\u000a```javascript\u000d\u000avar fs = require( 'fs' )\u000d\u000a\u000d\u000avar Queue = require( 'nbqueue' )\u000d\u000a\u000d\u000afs.readdir( directory, function ( err, files )\u000d\u000a\u0009{\u000d\u000a\u0009\u0009// set maxProcesses to 100\u000d\u000a\u0009\u0009var queue = new Queue( 100 )\u000d\u000a\u000d\u000a\u0009\u0009files.forEach( function ( file )\u000d\u000a\u0009\u0009\u0009{\u000d\u000a\u0009\u0009\u0009\u0009queue.add( function ( next )\u000d\u000a\u0009\u0009\u0009\u0009\u0009{\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009fs.readFile( file, function ( err, data )\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009{\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009next( err, data )\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009)\u000d\u000a\u0009\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009\u0009)\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009\u0009)\u000d\u000a\u000d\u000a\u0009\u0009queue.done( function ( err, results )\u000d\u000a\u0009\u0009\u0009{\u000d\u000a\u0009\u0009\u0009\u0009if ( err )\u000d\u000a\u0009\u0009\u0009\u0009{\u000d\u000a\u0009\u0009\u0009\u0009\u0009// if there were errors, they will be in an array\u000d\u000a\u0009\u0009\u0009\u0009\u0009console.log( err )\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u000d\u000a\u0009\u0009\u0009\u0009// results contains an array of the results passed to next()\u000d\u000a\u0009\u0009\u0009\u0009console.log( results )\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009\u0009)\u000d\u000a\u0009}\u000d\u000a)\u000d\u000a```\u000d\u000a\u000d\u000a#### executing async functions in order\u000d\u000a\u000d\u000asetting maxProcesses to 1 will ensure only 1 function can be executed at a time.\u000d\u000a","readmeFilename":"README.md","_id":"nbqueue@0.0.2","_shasum":"10f18366cb2c2b3282a37bcb17e8cc232cbb2a84","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"kvonflotow","email":"vonflow@gmail.com"},"maintainers":[{"name":"kvonflotow","email":"vonflow@gmail.com"}],"dist":{"shasum":"10f18366cb2c2b3282a37bcb17e8cc232cbb2a84","tarball":"http://registry.npmjs.org/nbqueue/-/nbqueue-0.0.2.tgz"}}: nbqueue
51 error     at RegClient.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:273:14)
51 error     at Request._callback (c:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:211:65)
51 error     at Request.self.callback (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:123:22)
51 error     at Request.EventEmitter.emit (events.js:98:17)
51 error     at Request.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:893:14)
51 error     at Request.EventEmitter.emit (events.js:117:20)
51 error     at IncomingMessage.<anonymous> (c:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:844:12)
51 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
51 error     at _stream_readable.js:919:16
51 error     at process._tickCallback (node.js:419:13)
52 error If you need help, you may report this *entire* log,
52 error including the npm and node versions, at:
52 error     <http://github.com/npm/npm/issues>
53 error System Windows_NT 6.1.7601
54 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
55 error cwd c:\gitstuff\nbqueue
56 error node -v v0.10.28
57 error npm -v 1.4.9
58 verbose exit [ 1, true ]
